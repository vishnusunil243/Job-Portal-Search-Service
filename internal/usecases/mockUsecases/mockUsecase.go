// Code generated by MockGen. DO NOT EDIT.
// Source: internal/usecases/usecaseInterface.go

// Package mock_usecases is a generated GoMock package.
package mock_usecases

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	entities "github.com/vishnusunil243/Job-Portal-Search-Service/entities"
)

// MockSearchUsecaseInterface is a mock of SearchUsecaseInterface interface.
type MockSearchUsecaseInterface struct {
	ctrl     *gomock.Controller
	recorder *MockSearchUsecaseInterfaceMockRecorder
}

// MockSearchUsecaseInterfaceMockRecorder is the mock recorder for MockSearchUsecaseInterface.
type MockSearchUsecaseInterfaceMockRecorder struct {
	mock *MockSearchUsecaseInterface
}

// NewMockSearchUsecaseInterface creates a new mock instance.
func NewMockSearchUsecaseInterface(ctrl *gomock.Controller) *MockSearchUsecaseInterface {
	mock := &MockSearchUsecaseInterface{ctrl: ctrl}
	mock.recorder = &MockSearchUsecaseInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockSearchUsecaseInterface) EXPECT() *MockSearchUsecaseInterfaceMockRecorder {
	return m.recorder
}

// AddSearchHistory mocks base method.
func (m *MockSearchUsecaseInterface) AddSearchHistory(arg0 entities.SearchHistory) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "AddSearchHistory", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// AddSearchHistory indicates an expected call of AddSearchHistory.
func (mr *MockSearchUsecaseInterfaceMockRecorder) AddSearchHistory(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AddSearchHistory", reflect.TypeOf((*MockSearchUsecaseInterface)(nil).AddSearchHistory), arg0)
}

// GetSearchHistory mocks base method.
func (m *MockSearchUsecaseInterface) GetSearchHistory(arg0 string) ([]entities.SearchHistory, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetSearchHistory", arg0)
	ret0, _ := ret[0].([]entities.SearchHistory)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetSearchHistory indicates an expected call of GetSearchHistory.
func (mr *MockSearchUsecaseInterfaceMockRecorder) GetSearchHistory(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetSearchHistory", reflect.TypeOf((*MockSearchUsecaseInterface)(nil).GetSearchHistory), arg0)
}
